name: CI
on:
  push:
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - 'master'
      - 'release-[0-9]+.[0-9]+'

# Cancel any in-progress CI runs for a PR if it is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  unixish:
    name: ${{ matrix.runner }} ${{ matrix.flavor }} (cc=${{ matrix.cc }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor: asan
            cc: clang-13
            runner: ubuntu-20.04
            os: linux
          - flavor: tsan
            cc: clang-13
            runner: ubuntu-20.04
            os: linux
          - cc: clang
            runner: macos-10.15
            os: osx
          - cc: clang
            runner: macos-11.0
            os: osx
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 45
    if: github.event.pull_request.draft == false
    env:
      CC: ${{ matrix.cc }}
      CI_OS_NAME: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup common environment variables
        run: ./.github/workflows/env.sh ${{ matrix.flavor }}

      - name: Install apt packages
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake build-essential ccache cmake cpanminus cscope gcc-multilib gdb gettext gperf language-pack-tr libtool-bin locales ninja-build pkg-config python3 python3-pip python3-setuptools unzip valgrind xclip

      - name: Install new clang
        if: matrix.flavor == 'asan' || matrix.flavor == 'tsan'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod a+x llvm.sh
          sudo ./llvm.sh 13
          rm llvm.sh

      - name: Install brew packages
        if: matrix.os == 'osx'
        run: |
          brew update >/dev/null
          brew install automake ccache perl cpanminus ninja

      - name: Setup interpreter packages
        run: |
          ./ci/install.sh

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CACHE_NVIM_DEPS_DIR }}
            ~/.ccache
          key: ${{ matrix.runner }}-${{ matrix.flavor }}-${{ matrix.cc }}-${{ hashFiles('cmake/*', 'third-party/**', '**/CMakeLists.txt') }}-${{ github.base_ref }}

      - name: Build third-party
        run: ./ci/before_script.sh

      - name: Build
        run: ./ci/run_tests.sh build

      - if: matrix.flavor != 'tsan'
        name: Unittests
        run: ./ci/run_tests.sh unittests
        continue-on-error: true

      - if: matrix.flavor != 'tsan'
        name: Functionaltests
        run: ./ci/run_tests.sh functionaltests
        continue-on-error: true

      - name: Oldtests
        run: ./ci/run_tests.sh oldtests
        continue-on-error: true

      - name: Install nvim
        run: ./ci/run_tests.sh install_nvim

      - name: Cache dependencies
        if: ${{ success() }}
        run: ./ci/before_cache.sh
